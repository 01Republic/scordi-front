@import './variables/grid';

.bs-container {
    width: 100%;
    padding-left: $gutter-size;
    padding-right: $gutter-size;

    & > .bs-row {
        width: initial;
    }
}

.bs-row {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    margin-left: -$gutter-size;
    margin-right: -$gutter-size;
}

/**
 * Col - N
 */
@for $i from 1 through $grid-bases-default {
    .bs-col-#{$i} {
        flex: 0 0 auto;
        width: calc(100% / #{$grid-bases-default} * #{$i});
        padding-left: $gutter-size;
        padding-right: $gutter-size;
    }
}
@each $abbrev, $min-width in $breakpoints {
    @for $i from 1 through $grid-bases-default {
        @media (min-width: $min-width) {
            .#{$abbrev}\:bs-col-#{$i} {
                flex: 0 0 auto;
                width: calc(100% / #{$grid-bases-default} * #{$i});
                padding-left: $gutter-size;
                padding-right: $gutter-size;
            }
        }
    }
}

/**
 * Col - N of base
 */
@each $grid-base in $grid-bases {
    @for $i from 1 through $grid-base {
        .bs-col-#{$i}-of-#{$grid-base} {
            flex: 0 0 auto;
            width: calc(100% / #{$grid-base} * #{$i});
            padding-left: $gutter-size;
            padding-right: $gutter-size;
        }
    }
    @each $abbrev, $min-width in $breakpoints {
        @for $i from 1 through $grid-base {
            @media (min-width: $min-width) {
                .#{$abbrev}\:bs-col-#{$i}-of-#{$grid-base} {
                    flex: 0 0 auto;
                    width: calc(100% / #{$grid-base} * #{$i});
                    padding-left: $gutter-size;
                    padding-right: $gutter-size;
                }
            }
        }
    }
}

/**
 * Col - Auto
 */
.bs-col {
    flex: 1 0 0%;
    padding-left: $gutter-size;
    padding-right: $gutter-size;
}
@each $abbrev, $min-width in $breakpoints {
    @media (min-width: $min-width) {
        .#{$abbrev}\:bs-col {
            flex: 1 0 0%;
            padding-left: $gutter-size;
            padding-right: $gutter-size;
        }
    }
}

@each $abbrev, $min-width in $new-breakpoints {
    @for $i from 1 through 12 {
        @media (min-width: $min-width) {
            .#{$abbrev}\:grid-cols-#{$i} {
                grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
            }
        }
    }
}

/**
 * grid-cols-* (기본정의된 12 스케일 이상의 값에 대한 생성)
 */
@for $i from 13 through 24 {
    .grid-cols-#{$i} {
        grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
    }
    .col-span-#{$i} {
        grid-column: span $i / span $i;
    }
}
