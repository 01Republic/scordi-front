
@each $n in (2, 3) {
  .badge-#{$n}xs {
    height: calc(0.75rem / #{$n}) !important;
    width: calc(0.75rem / #{$n}) !important;
    font-size: calc(0.75rem / #{$n}) !important;
    line-height: calc(.75rem / #{$n}) !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

/**
 * Buttons
 */
.btn {
  & > .btn-icon {
    //@extend .text-xl, .font-bold, .mr-2 !optional;

    //@extend .text-xl;
    font-size: 1.25rem;
    line-height: 1.75rem;

    //@extend .font-bold;
    font-weight: 700;

    //@extend .mr-2;
    margin-right: 0.5rem;
  }

  &-sm > .btn-icon {
    //@extend .text-lg, .font-bold, .mr-1 !optional;

    //@extend .text-lg;
    font-size: 1.125rem;
    line-height: 1.75rem;

    //@extend .font-bold;
    font-weight: 700;

    //@extend .mr-1;
    margin-right: 0.25rem;
  }

  &-big {
    height: 3.5rem;
    min-height: 3.5rem;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    font-size: 1rem;
  }

  &-weekly {
    border-color: transparent;
    --tw-bg-opacity: 0.2;
    font-weight: 400;
    //--tw-text-opacity: 1;
    //--tw-border-opacity: 0;
    //border-color: hsl(var(--s) / var(--tw-border-opacity));
    //background-color: hsl(var(--s) / var(--tw-bg-opacity));
    //color: hsl(var(--sc) / var(--tw-text-opacity));

    &:hover {--tw-bg-opacity: 0.2;}

    &.btn-primary   {color: hsl(var(--p) / var(--tw-border-opacity))}
    &.btn-secondary {color: hsl(var(--s) / var(--tw-border-opacity))}
    &.btn-info      {color: hsl(var(--in) / 1)}
  }
}

$color-name-list: ('slate', 'gray', 'zinc', 'stone', 'red', 'orange', 'amber', 'yellow', 'lime', 'green', 'emerald', 'teal', 'cyan', 'sky', 'blue', 'indigo', 'violet', 'purple', 'fuchsia', 'pink', 'rose');
$color-scale-list: (50, 100, 200, 300, 400, 500, 600, 700, 800, 900);

@each $color-name in $color-name-list {
  @each $scale in $color-scale-list {
    $scale-darken: if($scale > 700, 900, $scale + 200);

    .btn-#{$color-name}-#{$scale} {
      @apply border-#{$color-name}-#{$scale} bg-#{$color-name}-#{$scale};

      @if $scale >= 600 {
        @apply text-white;
      } @else {
        @apply text-#{$color-name}-900;
      }

      &:hover {
        @apply bg-#{$color-name}-#{$scale};
        @apply text-white; // white
      }

      &.btn-outline {
        @apply border-#{$color-name}-#{$scale} text-#{$color-name}-#{$scale};
        background-color: initial;

        &:hover {
          @apply bg-#{$color-name}-#{$scale};
          @apply text-white; // white
        }
      }
    }
  }
}

.btn-gray {
  @apply border-gray-300 bg-gray-300;
  @apply text-gray-800; // black

  &:hover {
    @apply bg-gray-500;
    @apply text-white; // white
  }

  &.btn-outline {
    @apply border-gray-500 text-gray-500;
    background-color: initial;

    &:hover {
      @apply bg-gray-500;
      @apply text-white; // white
    }
  }
}


.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover {
  --tw-border-opacity: 0;
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}

.btn-disabled,
.btn[disabled] {
  pointer-events: none;
}



//.hover-no {
//  &.btn-primary   {@apply text-white bg-primary}
//  &.btn-secondary {@apply text-white bg-secondary}
//  &.btn-info      {@apply text-white bg-info}
//}

.btn-hover-init:hover {
  background-color: inherit !important;
}
