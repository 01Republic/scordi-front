@import './generic';

@function rgba-to-rgb($rgba, $background: #fff) {
    @return mix(rgb(red($rgba), green($rgba), blue($rgba)), $background, alpha($rgba) * 100%);
}

@function get-scaled-color($base_color, $scale) {
    @return if(
        $scale <= 500,
        rgba-to-rgb(rgba($base_color, $scale * 2 / 1000)),
        rgba-to-rgb(rgba($base_color, (1000 - $scale) * 2 / 1000), #000)
    );
}

@mixin set-scaled-class($name, $attr, $value) {
    @each $scale in (50, 100, 200, 300, 400, 500, 600, 700, 800, 900) {
        @include set-class('#{$name}-#{$scale}', $attr, get-scaled-color($value, $scale));
    }
}

@mixin make-scaled-generic-class($domain, $name, $attr, $value) {
    $base_class: #{$domain}-#{$name};
    @include set-class($base_class, $attr, $value);
    @include set-scaled-class($base_class, $attr, $value);
}

@mixin makeGenericClassByColorName($name, $color) {
    @include make-scaled-generic-class('text', $name, 'color', $color);
    @include make-scaled-generic-class('bg', $name, 'background-color', $color);
    @include make-scaled-generic-class('border', $name, 'border-color', $color);
}

@mixin makeUnscaledGenericClassByColorName($name, $color) {
    @include make-generic-class('text', $name, 'color', $color);
    @include make-generic-class('bg', $name, 'background-color', $color);
    @include make-generic-class('border', $name, 'border-color', $color);
}
