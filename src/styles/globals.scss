@import url('https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.4/dist/web/variable/pretendardvariable.css');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    a {
        @apply text-blue-600 underline;
    }
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: "Pretendard Variable", -apple-system, BlinkMacSystemFont,
    system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo",
    "Noto Sans KR", "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol", sans-serif;
  background-color: #fafafa;
}

a {
    color: inherit;
    text-decoration: none;
}

* {
    box-sizing: border-box;
}

h1 {
    font-weight: 700;
    font-size: 2rem;
    line-height: 2.75rem;
}

h2 {
    font-weight: 700;
    font-size: 1.5rem;
    line-height: 2.25rem;
}

h3 {
    font-weight: 600;
    font-size: 1.5rem;
    line-height: 2.25rem;
}

h4 {
    font-weight: 600;
    font-size: 1.5rem;
    line-height: 2.25rem;
}

h5 {
    font-weight: 500;
    font-size: 1.5rem; /* 24px */
    line-height: 1.67rem;
}

h6 {
    font-weight: 500;
    font-size: 0.94rem; /* 15px */
    line-height: 1.44rem;
}

p {
    font-weight: 400;
    font-size: 0.875rem; /* 14px */
    line-height: 1.375rem; /* 22px */
}

.btn-hover-init:hover {
    background-color: inherit !important;
}

@each $n in (2, 3) {
    .badge-#{$n}xs {
        height: calc(0.75rem / #{$n}) !important;
        width: calc(0.75rem / #{$n}) !important;
        font-size: calc(0.75rem / #{$n}) !important;
        line-height: calc(0.75rem / #{$n}) !important;
        padding-left: 0 !important;
        padding-right: 0 !important;
    }
}

.select.select-bordered {
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
}

/**
 * Buttons
 */
.btn {
    & > .btn-icon {
        //@extend .text-xl, .font-bold, .mr-2 !optional;

        //@extend .text-xl;
        font-size: 1.25rem;
        line-height: 1.75rem;

        //@extend .font-bold;
        font-weight: 700;

        //@extend .mr-2;
        margin-right: 0.5rem;
    }

    &-sm > .btn-icon {
        //@extend .text-lg, .font-bold, .mr-1 !optional;

        //@extend .text-lg;
        font-size: 1.125rem;
        line-height: 1.75rem;

        //@extend .font-bold;
        font-weight: 700;

        //@extend .mr-1;
        margin-right: 0.25rem;
    }

    &-big {
        height: 3.5rem;
        min-height: 3.5rem;
        padding-left: 1.25rem;
        padding-right: 1.25rem;
        font-size: 1rem;
    }
}

.Toastify__toast {
    margin: 20px !important;
    background: #333d4b !important;
    border-radius: 14px !important;
}

$color-scordi: #5c5fee;
$color-scordi-light: #a5a6f5;

@function rgba-to-rgb($rgba, $background: #fff) {
  @return mix(rgb(red($rgba), green($rgba), blue($rgba)), $background, alpha($rgba) * 100%);
}

@function get-scaled-color($base_color, $scale) {
  @return if($scale <= 500, rgba-to-rgb(rgba($base_color, $scale * 2 / 1000)), rgba-to-rgb(rgba($base_color, (1000 - $scale) * 2 / 1000), #000));
}

@mixin set-scaled-class($base_class, $attr, $base_color, $state: '') {
  @each $scale in (50, 100, 200, 300, 400, 500, 600, 700, 800, 900) {
    @if str-length($state) > 0 {
      .#{$state}\:#{$base_class}-#{$scale}:#{$state} {
        #{$attr}: get-scaled-color($base_color, $scale);
      }
      @include set-important-class('#{$state}\:#{$base_class}-#{$scale}:#{$state}', $attr, get-scaled-color($base_color, $scale));
    } @else {
      .#{$base_class}-#{$scale} {
        #{$attr}: get-scaled-color($base_color, $scale);
      }
      @include set-important-class('#{$base_class}-#{$scale}', $attr, get-scaled-color($base_color, $scale));
    }
  }
}

@mixin set-important-class($base_class, $attr, $base_color) {
  .\!#{$base_class} { #{$attr}: $base_color !important; }
}

@mixin make-generic-class($component, $color_name, $attr, $color) {
  $base_class: #{$component}-#{$color_name};

  .#{$base_class} { #{$attr}: $color; }
  @include set-important-class($base_class, $attr, $color);
  @include set-scaled-class($base_class, $attr, $color);

  @each $state in ('hover', 'active', 'visited', 'focus') {
    .#{$state}\:#{$base_class}:#{$state} { #{$attr}: $color; }
    @include set-important-class('#{$state}\:#{$base_class}:#{$state}', $attr, $color);
    @include set-scaled-class($base_class, $attr, $color, $state);
  }
}

@mixin makeGenericClassByColorName($name, $color) {
  @include make-generic-class('text', $name, 'color', $color);
  @include make-generic-class('bg', $name, 'background-color', $color);
  @include make-generic-class('border', $name, 'border-color', $color);
}

@include makeGenericClassByColorName('scordi', $color-scordi);
@include makeGenericClassByColorName('scordi-light', $color-scordi-light);

@each $color-name in ('scordi', 'scordi-light') {
  @each $scale in (100, 200, 300, 400, 500, 600, 700, 800, 900) {
    $scale-darken: if($scale > 700, 900, $scale + 200);
    $scale_lower: if($scale - 100 < 100, 100, $scale - 100);
    $scale_higher: if($scale + 100 > 900, 900, $scale + 100);

    .btn-#{$color-name}-#{$scale} {
      @apply bg-#{$color-name}-#{$scale} border-#{$color-name}-#{$scale_lower};

      @if $scale >= 500 {
        @apply text-#{$color-name}-100;
      } @else {
        @apply text-#{$color-name}-900;
      }

      &:hover {
        @apply bg-#{$color-name}-#{$scale_higher} border-#{$color-name}-#{$scale};
        @apply text-white; // white
      }

      &.btn-outline {
        @apply border-#{$color-name}-#{$scale} text-#{$color-name}-#{$scale};
        background-color: initial;

        &:hover {
          @apply bg-#{$color-name}-#{$scale};
          @apply text-white; // white
        }
      }
    }
  }
}

@keyframes marquee {
  0% { left: 0; }
  100% { left: -100%; }
}

@keyframes marquee-reverse {
  0% { left: -100%; }
  100% { left: 0; }
}

.marqueeMoving,
.marqueeMoving-reverse {
  position: absolute;
  overflow: hidden;
  width: 200%;
  display: inline-flex;

  img {
    max-width: 100px;
    max-height: 100px;
  }
}

.marqueeMoving {
  animation: marquee 30s linear 0s infinite;
  &-reverse {
    animation: marquee-reverse 30s linear 0s infinite;
  }
}

@media screen and (max-width: 768px) {
  .marqueeMoving,
  .marqueeMoving-reverse {
    width: 400%;
    img {
      max-width: 100px;
      max-height: 40px;
    }
  }

  .marqueeMoving {
    animation: marquee 10s linear 0s infinite;
    &-reverse {
      animation: marquee-reverse 30s linear 0s infinite;
    }
  }
}


.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.scroll-right {
  transition: all 200ms ease;
}

body.hide-channel-talk {
  #ch-plugin {
    display: none !important;
  }
}

.check-circle-container {
  margin-left: auto;;
  margin-right: auto;;

  .svg-success {
    display: inline-block;
    vertical-align: top;
    //height: 300px;
    width: 100%;
    opacity: 1;
    overflow: visible;

    @keyframes success-tick {
      0% {
        stroke-dashoffset: 16px;
        opacity: 1
      }

      100% {
        stroke-dashoffset: 31px;
        opacity: 1
      }
    }

    @keyframes success-circle-outline {
      0% {
        stroke-dashoffset: 72px;
        opacity: 1
      }

      100% {
        stroke-dashoffset: 0px;
        opacity: 1
      }
    }

    @keyframes success-circle-fill {
      0% {
        opacity: 0;
      }

      100% {
        opacity: 1;
      }
    }

    .success-tick {
      fill: none;
      stroke-width: 1px;
      stroke: #ffffff;
      stroke-dasharray: 15px, 15px;
      stroke-dashoffset: -14px;
      animation: success-tick 450ms ease 1400ms forwards;
      opacity: 0;
    }

    .success-circle-outline {
      fill: none;
      stroke-width: 1px;
      stroke-dasharray: 72px, 72px;
      stroke-dashoffset: 72px;
      animation: success-circle-outline 300ms ease-in-out 800ms forwards;
      opacity: 0;
    }

    .success-circle-fill {
      stroke: none;
      opacity: 0;
      animation: success-circle-fill 300ms ease-out 1100ms forwards;
    }

    // Can't animate stroke-dashoffset on IE 10 and 11, just show svg instead
    @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
      .success-tick {
        stroke-dasharray: 0;
        stroke-dashoffset: 0;
        animation: none;
        opacity: 1;
      }

      .success-circle-outline {
        stroke-dasharray: 0;
        stroke-dashoffset: 0;
        animation: none;
        opacity: 1;
      }

      .success-circle-fill {
        animation: none;
        opacity: 1;
      }
    }
  }
}
